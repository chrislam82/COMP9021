{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid1\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh14980\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls1\ilvl0
\f0\fs29\fsmilli14667 \cf2 Adding lists\
\
\
\
{\listtext	.	}\expnd0\expndtw0\kerning0
One evening as you are out for a stroll, you walk by a doorway labeled no normals\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	.	}\expnd0\expndtw0\kerning0
      allowed. Some people are talking inside. Curious, you listen, and you hear Sir Paul\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	.	}\expnd0\expndtw0\kerning0
      who says: "all of us are Knaves." "Exactly one of us is a Knight," replies Sir Jenny.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	.	}\expnd0\expndtw0\kerning0
      As for Sir John, who is also inside, he just keeps quiet. Who is a Knight, and who\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	.	}\expnd0\expndtw0\kerning0
      is a Knave?\
\pard\tx566\pardeftab720\sl340\partightenfactor0

\fs24 \cf2 \
\
\{ Paul, Jenny, John \}\
\
\
(1,1,1)\
>(0,1,0)\
\pard\tx566\pardeftab720\sl340\partightenfactor0
\cf2 (0,0,1)\
\pard\tx566\pardeftab720\sl340\partightenfactor0
\cf2 \
>(0,1,0)\
(1,0,1)\
\pard\tx566\pardeftab720\sl340\partightenfactor0
\cf2 (0,0,0)\
\
Question is, how do we determine if there are multiple solutions\
Solution combos\
\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\pardeftab720\sl340\partightenfactor0

\fs29\fsmilli14667 \cf2 I have just met Sirs Frank, Paul and Nina.\
Sir Nina said: "I am a Knight," but I am not sure\
if that is true. What do you think?\
\
Frank, Paul, Nina\
\
(0,0,1)\
(1,0,1)\
(0,1,0)\
(1,1,1)\
(0,0,0)\
(0,1,0)\
(1,0,0)\
(1,1,0)\
\
8 solutions\
\
\pard\tx566\pardeftab720\sl340\partightenfactor0

\fs24 \cf2 \'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sl340\partightenfactor0

\fs29\fsmilli14667 \cf2 Yesterday, I visited Sirs Andrew and Nancy. I asked Sir Andrew\
who he was, and he answered impatiently: "Sir Nancy and I\
are Knaves!" Then I met Sir Bill who introduced me to his wife\
and told me: "at least one of Sir Hilary\
and I is a Knave." Should I trust them?\
\
(Andrew, Nancy, Bill, Hilary)\
\
Andrew \'97> 1(0,0,2,2) <\'97 compare with value at index, they don\'92t match for andrew, hence incorrect statement\
\pard\pardeftab720\sl340\partightenfactor0
\cf2 Andrew \'97> 0(1,0,2,2) <\'97 Also wrong since 0 and 1 at the same time\
Andrew \'97> 0(0,1,2,2) # Potentially correct because 0 and 0\
Andrew \'97> 0(1,1,2,2) <\'97 Also wrong since 0 and 1 at the same time \
\pard\pardeftab720\sl340\partightenfactor0
\cf2 \
<\'97 how to capture a lying andrew here? (he has to be knave, and nancy has to be knight, since andrew being knight would be wrong)
\fs24 \cf2 \
\pard\tx566\pardeftab720\sl340\partightenfactor0
\cf2 Bill \'97> (2,2,0,1)\
\
# Comparing the 2 potential valid statements\
(0,1,2,2)\
(2,2,0,1)\
Therefore, answer is (0,1,0,1)\
unique solution\
\
# Yep, so as we can see here, we need to find all sirs first, else we cant assign 2 in case they aren\'92t mentioned\
# Same case as well as if words like all are used\
# Also need to store whether we are assuming person speaking is lying or telling the truth\
# After filling, compare with statement\
# If false, reject statement and del\
# Make sure its a data structure that maintains order\
# Maybe a dictionary of dictionaries then\
\
Example of assumption comparison\
Sir John and Jack\
John says I am knave\
\
(John, Jack)\
John \'97> 1 \'97> (0,1)\
John \'97> 0 \'97> (1,0)\
Both dont match, so no solution\
\
\
\
# Last Q is how to store valid truth statements?\
# Not all combinations match\
We may have 2 from each of 2 speeches\
But only one of each match\
In which case we have 2 solutions, not 4\
\
}